filter {
  if [type] == "nginx-access" {
    if [index == cdnnowfb] {
     grok {
     	match => [ "message" , "("%{NUMBER:msec}" "%{HTTPDATE:timestamp}" "%{NUMBER:bytes_sent}" "%{NUMBER:request_length}" "%{IP:server_addr}" "%{IP:remote_addr}")"]
    	overwrite => [ "message" ]
     }
     
     geoip {
    	source => "remote_addr"
    	target => "geoip"
    	add_tag => [ "nginx-geoip" ]
     }
     
     date {
    	match => [ "timestamp" , "YYYY/MM/dd HH:mm:ss" ]
    	remove_field => [ "timestamp" ]
     }
    }
    else {
     grok {
      patterns_dir => ["/opt/logstash/patterns/"]
      match => { "message" => "%{NGINXACCESS}" }
     }
     geoip {
    	source => "clientip"
    	target => "geoip"
    	add_tag => [ "nginx-geoip" ]
     }
     
     date {
    	match => [ "timestamp" , "YYYY/MM/dd HH:mm:ss" ]
    	remove_field => [ "timestamp" ]
     }
    } 
  }
  if [type] == "nginx-error" {
     grok {
     	match => [ "message" , "(?<timestamp>%{YEAR}[./-]%{MONTHNUM}[./-]%{MONTHDAY}[- ]%{TIME}) \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER}: %{GREEDYDATA:errormessage}(?:, client: (?<client>%{IP}|%{HOSTNAME}))(?:, server: %{IPORHOST:server})(?:, request: %{QS:request})?(?:, upstream: \"%{URI:upstream}\")?(?:, host: %{QS:host})?(?:, referrer: \"%{URI:referrer}\")"]
    	overwrite => [ "message" ]
     }
     
     geoip {
    	source => "client"
    	target => "geoip"
    	add_tag => [ "nginx-geoip" ]
     }
     
     date {
    	match => [ "timestamp" , "YYYY/MM/dd HH:mm:ss" ]
    	remove_field => [ "timestamp" ]
     }
#    grok {
#      patterns_dir => ["/opt/logstash/patterns/"]
#      match => { "message" => "%{NGINX_ERROR}" }
#    }
  }
}
